{"mappings":"AAIoBA,SAASC,cAAc,iBAC1BD,SAASC,cAAc,WACxBD,SAASC,cAAc,UACvBD,SAASC,cAAc,aCPvC,MAAMC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,WAClCG,EAAUJ,SAASC,cAAc,UACjCI,EAAUL,SAASC,cAAc,aAKvCK,OAAOC,iBAAiB,QAAQ,KAAM,OAGVC,EAHsBN,EAGZO,EAHyBN,EAGbO,EAHuBN,OAIrEO,MAAMC,SAAU,CAACC,QAAS,CAAC,YAAaC,WACnCC,MAAMC,IACHR,EAASS,UAAUC,QAAQ,UAAW,UACtCT,EAAWQ,UAAUC,QAAQ,SAAU,WACvCR,EAAUO,UAAUC,QAAQ,UAAW,UAEhCF,EAASG,UAEnBJ,MAAMK,IACHZ,EAASS,UAAUC,QAAQ,SAAU,WACrCT,EAAWQ,UAAUC,QAAQ,UAAW,UACxCR,EAAUO,UAAUC,QAAQ,UAAW,UAEvCE,EAAOC,SAAQC,IACX,IAAIC,EAASvB,SAASwB,cAAc,UACpCD,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3BpB,EAASqB,OAAON,EAAO,GACzB,IAELO,OAAM,KACHtB,EAASS,UAAUC,QAAQ,UAAW,UACtCT,EAAWQ,UAAUC,QAAQ,UAAW,UACxCR,EAAUO,UAAUC,QAAQ,SAAU,UAAU,IAxBrD,IAAqBV,EAAUC,EAAYC,CAH+B,IACjFR,EAAYK,iBAAiB,UAAU,KAAM,OA+BbwB,EA/B6B7B,EAAYuB,WAgCrEd,MAAMqB,OAASD,EAAO,CAAClB,QAAS,CAAC,YAAaC,WAC1CC,MAAMC,IACJX,EAAQY,UAAUC,QAAQ,UAAW,UACrCf,EAASc,UAAUC,QAAQ,SAAU,WACrCd,EAAQa,UAAUC,QAAQ,UAAW,UAE9BF,EAASG,UAElBJ,MAAMkB,IACJ5B,EAAQY,UAAUC,QAAQ,SAAU,WACpCf,EAASc,UAAUC,QAAQ,UAAW,UACtCd,EAAQa,UAAUC,QAAQ,UAAW,UAErC,MAAMgB,EAAYD,EAAK,GAAGb,OAAO,GAEjCf,EAAQ8B,UAAY,+HAEiDD,EAAUE,sIAE1CF,EAAUG,iEACVH,EAAUI,kDAE9C,IAEHR,OAAM,KACJzB,EAAQY,UAAUC,QAAQ,UAAW,UACrCf,EAASc,UAAUC,QAAQ,UAAW,UACtCd,EAAQa,UAAUC,QAAQ,SAAU,UAAU,IA5BjD,IAAyBa,CA/B+C","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const breedUrl = \"https://api.thecatapi.com/v1/breeds\";\nconst catUrl = \"https://api.thecatapi.com/v1/images/search?breed_ids=\";\nconst api_key = \"live_iTXFzPkHdC4oTgN59kH3GxZuT9eSiCYByP1BBv24lnnQqDZPMjk0iJuaj0bMHA4W\";\n\nconst breedSelect = document.querySelector(\".breed-select\");\nconst loaderEl = document.querySelector(\".loader\");\nconst errorEl = document.querySelector(\".error\");\nconst catInfo = document.querySelector(\".cat-info\");\n\nexport function fetchBreeds(selector, loaderElem, errorElem) {\n    fetch(breedUrl, {headers: {\"x-api-key\": api_key}})\n        .then((response) => {\n            selector.classList.replace(\"visible\", \"hidden\");\n            loaderElem.classList.replace(\"hidden\", \"visible\");\n            errorElem.classList.replace(\"visible\", \"hidden\");\n\n            return response.json();\n        })\n        .then((breeds) => {\n            selector.classList.replace(\"hidden\", \"visible\");\n            loaderElem.classList.replace(\"visible\", \"hidden\");\n            errorElem.classList.replace(\"visible\", \"hidden\");\n     \n            breeds.forEach(breed => {\n                let option = document.createElement('option');          \n                option.value = breed.id;\n                option.textContent = breed.name;\n                selector.append(option);\n            });      \n        })\n        .catch(() => {\n            selector.classList.replace(\"visible\", \"hidden\");\n            loaderElem.classList.replace(\"visible\", \"hidden\");\n            errorElem.classList.replace(\"hidden\", \"visible\");\n        }\n    );\n}\n \nexport function fetchCatByBreed(catId) {\n    fetch(catUrl + catId, {headers: {\"x-api-key\": api_key}})\n       .then((response) => {\n          catInfo.classList.replace(\"visible\", \"hidden\");\n          loaderEl.classList.replace(\"hidden\", \"visible\");\n          errorEl.classList.replace(\"visible\", \"hidden\");\n \n          return response.json();\n       })\n       .then((data) => {\n          catInfo.classList.replace(\"hidden\", \"visible\");\n          loaderEl.classList.replace(\"visible\", \"hidden\");\n          errorEl.classList.replace(\"visible\", \"hidden\");\n \n          const breedData = data[0].breeds[0];\n \n          catInfo.innerHTML = `\n             <div class=\"cat-info-content\">\n             <img class=\"breed-image\" src=\"https://cdn2.thecatapi.com/images/${breedData.reference_image_id}.jpg\" alt=\"Cat Image\">\n             <div class=\"breed-text-info\">\n                <p class=\"breed-description\">${breedData.description}</p>\n                <p class=\"breed-temperament\">${breedData.temperament}</p>\n             </div>\n          `;\n          })\n       .catch(() => {\n          catInfo.classList.replace(\"visible\", \"hidden\");\n          loaderEl.classList.replace(\"visible\", \"hidden\");\n          errorEl.classList.replace(\"hidden\", \"visible\");\n       });\n }","const breedSelect = document.querySelector(\".breed-select\");\nconst loaderEl = document.querySelector(\".loader\");\nconst errorEl = document.querySelector(\".error\");\nconst catInfo = document.querySelector(\".cat-info\");\n\nimport {fetchBreeds} from \"./cat-api\";\nimport {fetchCatByBreed} from \"./cat-api\";\n\nwindow.addEventListener(\"load\", () => fetchBreeds(breedSelect, loaderEl, errorEl));\nbreedSelect.addEventListener(\"change\", () => fetchCatByBreed(breedSelect.value));\n\nexport function fetchBreeds(selector, loaderElem, errorElem) {\n    fetch(breedUrl, {headers: {\"x-api-key\": api_key}})\n        .then((response) => {\n            selector.classList.replace(\"visible\", \"hidden\");\n            loaderElem.classList.replace(\"hidden\", \"visible\");\n            errorElem.classList.replace(\"visible\", \"hidden\");\n\n            return response.json();\n        })\n        .then((breeds) => {\n            selector.classList.replace(\"hidden\", \"visible\");\n            loaderElem.classList.replace(\"visible\", \"hidden\");\n            errorElem.classList.replace(\"visible\", \"hidden\");\n     \n            breeds.forEach(breed => {\n                let option = document.createElement('option');          \n                option.value = breed.id;\n                option.textContent = breed.name;\n                selector.append(option);\n            });      \n        })\n        .catch(() => {\n            selector.classList.replace(\"visible\", \"hidden\");\n            loaderElem.classList.replace(\"visible\", \"hidden\");\n            errorElem.classList.replace(\"hidden\", \"visible\");\n        }\n    );\n}\n \nexport function fetchCatByBreed(catId) {\n    fetch(catUrl + catId, {headers: {\"x-api-key\": api_key}})\n       .then((response) => {\n          catInfo.classList.replace(\"visible\", \"hidden\");\n          loaderEl.classList.replace(\"hidden\", \"visible\");\n          errorEl.classList.replace(\"visible\", \"hidden\");\n \n          return response.json();\n       })\n       .then((data) => {\n          catInfo.classList.replace(\"hidden\", \"visible\");\n          loaderEl.classList.replace(\"visible\", \"hidden\");\n          errorEl.classList.replace(\"visible\", \"hidden\");\n \n          const breedData = data[0].breeds[0];\n \n          catInfo.innerHTML = `\n             <div class=\"cat-info-content\">\n             <img class=\"breed-image\" src=\"https://cdn2.thecatapi.com/images/${breedData.reference_image_id}.jpg\" alt=\"Cat Image\">\n             <div class=\"breed-text-info\">\n                <p class=\"breed-description\">${breedData.description}</p>\n                <p class=\"breed-temperament\">${breedData.temperament}</p>\n             </div>\n          `;\n          })\n       .catch(() => {\n          catInfo.classList.replace(\"visible\", \"hidden\");\n          loaderEl.classList.replace(\"visible\", \"hidden\");\n          errorEl.classList.replace(\"hidden\", \"visible\");\n       });\n }"],"names":["document","querySelector","$1f0dc3b9307be026$var$breedSelect","$1f0dc3b9307be026$var$loaderEl","$1f0dc3b9307be026$var$errorEl","$1f0dc3b9307be026$var$catInfo","window","addEventListener","selector","loaderElem","errorElem","fetch","breedUrl","headers","api_key","then","response","classList","replace","json","breeds","forEach","breed","option","createElement","value","id","textContent","name","append","catch","catId","catUrl","data","breedData","innerHTML","reference_image_id","description","temperament"],"version":3,"file":"index.8b4317ae.js.map"}