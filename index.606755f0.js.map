{"mappings":"YAAA,IAAMA,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAEhCE,GADQH,SAASC,cAAc,UACrBD,SAASC,cAAc,cAUjCG,EAAO,sCACPC,EAAU,wEACZC,EAAe,GAEnBP,EAAYQ,iBAAiB,SAmC7B,WACEL,EAAOM,MAAMC,QAAU,QACDV,EAAYW,WAlCjCC,MAAMP,EAAK,CAACQ,QAAS,CACf,YAAaP,KAElBQ,MAAK,SAACC,GACJ,OAAOA,EAASC,M,IAElBF,MAAK,SAACG,GAGJA,EAAOA,EAAKC,QAAO,SAAAC,G,IAAMC,EAAA,OAAgB,OAAP,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWE,I,IAEvCf,EAAeU,EAEZ,IAAK,IAAIM,EAAI,EAAGA,EAAIhB,EAAaiB,OAAQD,IAAK,CAC9C,IAAME,EAAQlB,EAAagB,GACvBG,EAASzB,SAAS0B,cAAc,UAGhCF,EAAMJ,QAGVK,EAAOf,MAAQY,EACfG,EAAOE,UAAY,GAAcC,OAAXJ,EAAMK,MAC5B9B,EAAY+B,YAAYL,G,KAI1BM,OAAM,SAASC,GACbC,QAAQC,IAAIF,E,KAOenB,MAC9B,SAAAG,GACG,IAAMmB,EAAOnB,EAAKoB,KACf,SAAAC,G,MACG,gDAGST,OADMS,EAAIhB,IAAI,yDAEfO,OADCS,EAAIC,OAAO,GAAGT,KAAK,6BACDD,OAAnBS,EAAIC,OAAO,GAAGT,KAAK,wC,IAG/BU,KAAK,IACPpC,EAAQwB,UAAYQ,C,IACpBJ,OAAM,WACNE,QAAQC,IAAI,sD,IACZM,SACA,WACGtC,EAAOM,MAAMC,QAAU,M","sources":["src/index.js"],"sourcesContent":["const breedSelect = document.querySelector(\".breed-select\");\nconst loader = document.querySelector(\".loader\");\nconst error = document.querySelector(\".error\");\nconst catInfo = document.querySelector(\".cat-info\");\n\n/*\n\n\"api_key=live_iTXFzPkHdC4oTgN59kH3GxZuT9eSiCYByP1BBv24lnnQqDZPMjk0iJuaj0bMHA4W\"\n\n\"https://api.thecatapi.com/v1/breeds\"\n\n*/\n\nconst url = `https://api.thecatapi.com/v1/breeds`;\nconst api_key = \"live_iTXFzPkHdC4oTgN59kH3GxZuT9eSiCYByP1BBv24lnnQqDZPMjk0iJuaj0bMHA4W\";\nlet storedBreeds = [];\n\nbreedSelect.addEventListener(\"click\", showBreedInfo);\n\nfunction fetchCatByBreed() {\n   fetch(url, {headers: {\n         'x-api-key': api_key\n   }})\n   .then((response) => {\n      return response.json();\n   })\n   .then((data) => {\n      \n      //filter to only include those with an `image` object\n      data = data.filter(img=> img.image?.url!=null)\n      \n   storedBreeds = data;\n      \n      for (let i = 0; i < storedBreeds.length; i++) {\n      const breed = storedBreeds[i];\n      let option = document.createElement('option');\n      \n      //skip any breeds that don't have an image\n      if(!breed.image) continue;\n      \n      //use the current array index\n      option.value = i;\n      option.innerHTML = `${breed.name}`;\n      breedSelect.appendChild(option);\n      \n      }\n   })\n   .catch(function(error) {\n      console.log(error);\n   });\n}\n\nfunction showBreedInfo() { \n  loader.style.display = \"none\";\n  const selectBreedId = breedSelect.value;\n  fetchCatByBreed(selectBreedId).then(\n   data => {\n      const html = data.map (\n         cat =>\n            `\n            <li>\n               <img src=\"${cat.url}\" alt=\"cat-image\" width=\"300\" />\n               <h2>${cat.breeds[0].name}</h2>\n               <p>${cat.breeds[0].name}</p>\n            </li>\n            `\n      ).join(\"\");\n      catInfo.innerHTML = html;\n   }).catch(() => {\n      console.log(\"Oops! Something went wrong! Try reloading this page\");\n   }).finally(\n      () => {\n         loader.style.display = \"none\";\n      }\n   );\n}\n"],"names":["$b8f9b7833fa37166$var$breedSelect","document","querySelector","$b8f9b7833fa37166$var$loader","$b8f9b7833fa37166$var$catInfo","$b8f9b7833fa37166$var$url","$b8f9b7833fa37166$var$api_key","$b8f9b7833fa37166$var$storedBreeds","addEventListener","style","display","value","fetch","headers","then","response","json","data","filter","img","ref","image","url","i","length","breed","option","createElement","innerHTML","concat","name","appendChild","catch","error1","console","log","html","map","cat","breeds","join","finally"],"version":3,"file":"index.606755f0.js.map"}